//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneticProgramming.Core.GPService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GPService.IGPService")]
    public interface IGPService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetPopulationInfo", ReplyAction="http://tempuri.org/IGPService/GetPopulationInfoResponse")]
        GeneticProgramming.Data.Statistics.PopulationInfo GetPopulationInfo(int populationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetPopulationInfo", ReplyAction="http://tempuri.org/IGPService/GetPopulationInfoResponse")]
        System.Threading.Tasks.Task<GeneticProgramming.Data.Statistics.PopulationInfo> GetPopulationInfoAsync(int populationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/LoadPopulation", ReplyAction="http://tempuri.org/IGPService/LoadPopulationResponse")]
        void LoadPopulation(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/LoadPopulation", ReplyAction="http://tempuri.org/IGPService/LoadPopulationResponse")]
        System.Threading.Tasks.Task LoadPopulationAsync(string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/Init", ReplyAction="http://tempuri.org/IGPService/InitResponse")]
        bool Init(string initializatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/Init", ReplyAction="http://tempuri.org/IGPService/InitResponse")]
        System.Threading.Tasks.Task<bool> InitAsync(string initializatorName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetIndividual", ReplyAction="http://tempuri.org/IGPService/GetIndividualResponse")]
        GeneticProgramming.Data.Contracts.ProgramEnvelope GetIndividual();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetIndividual", ReplyAction="http://tempuri.org/IGPService/GetIndividualResponse")]
        System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.ProgramEnvelope> GetIndividualAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetSpecificIndividual", ReplyAction="http://tempuri.org/IGPService/GetSpecificIndividualResponse")]
        GeneticProgramming.Data.Contracts.ProgramEnvelope GetSpecificIndividual(int populationNumber, int numberOfIndividual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetSpecificIndividual", ReplyAction="http://tempuri.org/IGPService/GetSpecificIndividualResponse")]
        System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.ProgramEnvelope> GetSpecificIndividualAsync(int populationNumber, int numberOfIndividual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetBasicInfo", ReplyAction="http://tempuri.org/IGPService/GetBasicInfoResponse")]
        GeneticProgramming.Data.Contracts.BasicInfo GetBasicInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetBasicInfo", ReplyAction="http://tempuri.org/IGPService/GetBasicInfoResponse")]
        System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.BasicInfo> GetBasicInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetFitnessInfo", ReplyAction="http://tempuri.org/IGPService/GetFitnessInfoResponse")]
        GeneticProgramming.Data.Contracts.FitnessInfo GetFitnessInfo(int populationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetFitnessInfo", ReplyAction="http://tempuri.org/IGPService/GetFitnessInfoResponse")]
        System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.FitnessInfo> GetFitnessInfoAsync(int populationNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/RateIndividual", ReplyAction="http://tempuri.org/IGPService/RateIndividualResponse")]
        void RateIndividual(GeneticProgramming.Data.Contracts.IndividualEvaluationResults results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/RateIndividual", ReplyAction="http://tempuri.org/IGPService/RateIndividualResponse")]
        System.Threading.Tasks.Task RateIndividualAsync(GeneticProgramming.Data.Contracts.IndividualEvaluationResults results);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetMetadataWithResults", ReplyAction="http://tempuri.org/IGPService/GetMetadataWithResultsResponse")]
        GeneticProgramming.Data.Contracts.MetadataWithResults[] GetMetadataWithResults();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetMetadataWithResults", ReplyAction="http://tempuri.org/IGPService/GetMetadataWithResultsResponse")]
        System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.MetadataWithResults[]> GetMetadataWithResultsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetBestResults", ReplyAction="http://tempuri.org/IGPService/GetBestResultsResponse")]
        GeneticProgramming.Data.Contracts.BestResult[] GetBestResults();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPService/GetBestResults", ReplyAction="http://tempuri.org/IGPService/GetBestResultsResponse")]
        System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.BestResult[]> GetBestResultsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGPServiceChannel : GeneticProgramming.Core.GPService.IGPService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GPServiceClient : System.ServiceModel.ClientBase<GeneticProgramming.Core.GPService.IGPService>, GeneticProgramming.Core.GPService.IGPService {
        
        public GPServiceClient() {
        }
        
        public GPServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GPServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GPServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GPServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GeneticProgramming.Data.Statistics.PopulationInfo GetPopulationInfo(int populationNumber) {
            return base.Channel.GetPopulationInfo(populationNumber);
        }
        
        public System.Threading.Tasks.Task<GeneticProgramming.Data.Statistics.PopulationInfo> GetPopulationInfoAsync(int populationNumber) {
            return base.Channel.GetPopulationInfoAsync(populationNumber);
        }
        
        public void LoadPopulation(string path) {
            base.Channel.LoadPopulation(path);
        }
        
        public System.Threading.Tasks.Task LoadPopulationAsync(string path) {
            return base.Channel.LoadPopulationAsync(path);
        }
        
        public bool Init(string initializatorName) {
            return base.Channel.Init(initializatorName);
        }
        
        public System.Threading.Tasks.Task<bool> InitAsync(string initializatorName) {
            return base.Channel.InitAsync(initializatorName);
        }
        
        public GeneticProgramming.Data.Contracts.ProgramEnvelope GetIndividual() {
            return base.Channel.GetIndividual();
        }
        
        public System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.ProgramEnvelope> GetIndividualAsync() {
            return base.Channel.GetIndividualAsync();
        }
        
        public GeneticProgramming.Data.Contracts.ProgramEnvelope GetSpecificIndividual(int populationNumber, int numberOfIndividual) {
            return base.Channel.GetSpecificIndividual(populationNumber, numberOfIndividual);
        }
        
        public System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.ProgramEnvelope> GetSpecificIndividualAsync(int populationNumber, int numberOfIndividual) {
            return base.Channel.GetSpecificIndividualAsync(populationNumber, numberOfIndividual);
        }
        
        public GeneticProgramming.Data.Contracts.BasicInfo GetBasicInfo() {
            return base.Channel.GetBasicInfo();
        }
        
        public System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.BasicInfo> GetBasicInfoAsync() {
            return base.Channel.GetBasicInfoAsync();
        }
        
        public GeneticProgramming.Data.Contracts.FitnessInfo GetFitnessInfo(int populationNumber) {
            return base.Channel.GetFitnessInfo(populationNumber);
        }
        
        public System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.FitnessInfo> GetFitnessInfoAsync(int populationNumber) {
            return base.Channel.GetFitnessInfoAsync(populationNumber);
        }
        
        public void RateIndividual(GeneticProgramming.Data.Contracts.IndividualEvaluationResults results) {
            base.Channel.RateIndividual(results);
        }
        
        public System.Threading.Tasks.Task RateIndividualAsync(GeneticProgramming.Data.Contracts.IndividualEvaluationResults results) {
            return base.Channel.RateIndividualAsync(results);
        }
        
        public GeneticProgramming.Data.Contracts.MetadataWithResults[] GetMetadataWithResults() {
            return base.Channel.GetMetadataWithResults();
        }
        
        public System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.MetadataWithResults[]> GetMetadataWithResultsAsync() {
            return base.Channel.GetMetadataWithResultsAsync();
        }
        
        public GeneticProgramming.Data.Contracts.BestResult[] GetBestResults() {
            return base.Channel.GetBestResults();
        }
        
        public System.Threading.Tasks.Task<GeneticProgramming.Data.Contracts.BestResult[]> GetBestResultsAsync() {
            return base.Channel.GetBestResultsAsync();
        }
    }
}
